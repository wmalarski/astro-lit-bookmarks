---
import { checkboxRecipe } from "@recipes/Checkbox.recipe";
import { formControlRecipe } from "@recipes/FormControl.recipe";
import { labelRecipe, labelTextRecipe } from "@recipes/Label.recipe";
import { actions } from "astro:actions";
import type { MatchBookmarksResult } from "../../server/data/matchBookmarks";

export type Props = {
  item: MatchBookmarksResult;
};

const { item } = Astro.props;
---

<form method="post" action={actions.updateBookmarkDone}>
  <label class={formControlRecipe()}>
    <input
      name="done"
      checked={item.bookmark?.done}
      class={checkboxRecipe()}
      type="checkbox"
    />
    <div class={labelRecipe()}>
      <span class={labelTextRecipe()}>Done</span>
    </div>
  </label>
</form>
<!-- `;
  }

  onChange() {
    this.dispatchEvent(
      new CheckDoneBookmarkEvent({
        done: this.tagInput.checked,
        bookmarkId: this.item.bookmark?.id,
        mastoBookmarkId: this.item.mastoBookmark?.id,
      }),
    );
  }
}

declare global {
  interface HTMLElementTagNameMap {
    [BookmarkDoneCheckbox.elementName]: BookmarkDoneCheckbox;
  }
} -->
