---
import ShareButton from "@components/ShareButton/ShareButton.astro";
import { buttonRecipe } from "@recipes/Button.recipe";
import type { MatchBookmarksResult } from "@server/data/matchBookmarks";
import type { tagTable } from "@server/db";
import type { InferSelectModel } from "drizzle-orm";
import BookmarkDoneCheckbox from "./BookmarkDoneCheckbox.astro";
import BookmarkTag from "./BookmarkTag.astro";
import BookmarkTagsForm from "./BookmarkTagsForm.astro";
import MastoBookmarkItem from "./MastoBookmarkItem.astro";
import RemoveBookmarkButton from "./RemoveBookmarkButton.astro";

export type Props = {
  item: MatchBookmarksResult;
  tags: InferSelectModel<typeof tagTable>[];
  tagsMap: Map<string, InferSelectModel<typeof tagTable>>;
};

const { item, tagsMap, tags } = Astro.props;

const bookmark = item.bookmark;
const mastoCard = item.mastoBookmark?.card;

const title = bookmark?.title ?? mastoCard?.title ?? "";
const text = bookmark?.content ?? mastoCard?.description ?? "";
const url = bookmark?.url ?? item.mastoBookmark?.uri ?? "";

const assignedTags = item.bookmarkTags.flatMap((bookmarkTag) => {
  const tag = tagsMap.get(bookmarkTag.tagId);
  return tag ? [{ tag, bookmarkTag }] : [];
});
---

<div class="flex flex-col gap-2 p-4 border-b-[1px] border-b-base-content">
  <strong>{title}</strong>
  <span>{text}</span>
  {
    assignedTags && assignedTags.length > 0 ? (
      <ul class="flex flex-wrap gap-2">
        {assignedTags.map(({ tag, bookmarkTag }) => (
          <BookmarkTag tag={tag} bookmarkTag={bookmarkTag} />
        ))}
        <li>
          <BookmarkTagsForm item={item} tags={tags} />
        </li>
      </ul>
    ) : null
  }
  <BookmarkDoneCheckbox item={item} />
  {
    !item.mastoBookmark && item.bookmark ? (
      <RemoveBookmarkButton item={item} />
    ) : null
  }
  <ShareButton
    class={buttonRecipe({ size: "sm", color: "primary" })}
    title={title}
    text={text}
    url={url}>Share</ShareButton
  >
  {
    item.mastoBookmark ? (
      <MastoBookmarkItem mastoBookmark={item.mastoBookmark} />
    ) : null
  }
</div>
