---
import { buttonRecipe } from "@recipes/Button.recipe";
import { formControlRecipe } from "@recipes/FormControl.recipe";
import { labelRecipe, labelTextRecipe } from "@recipes/Label.recipe";
import { selectRecipe } from "@recipes/Select.recipe";
import type { tagTable } from "@server/db";
import { actions } from "astro:actions";
import type { InferSelectModel } from "drizzle-orm";
import type { MatchBookmarksResult } from "../../server/data/matchBookmarks";

export type Props = {
  item: MatchBookmarksResult;
  tags: InferSelectModel<typeof tagTable>[];
};

const { item, tags } = Astro.props;

const tagsIds = new Set(
  item.bookmarkTags.map((bookmarkTag) => bookmarkTag.tagId),
);
const unassignedTags = tags.filter((tag) => !tagsIds.has(tag.id));
---

<form method="post" action={actions.createBookmarkTags}>
  <input name="bookmarkId" value={item.bookmark?.id} type="hidden" />
  <input name="mastoBookmarkId" value={item.mastoBookmark?.id} type="hidden" />
  <label class={formControlRecipe()}>
    <div class={labelRecipe()}>
      <span class={labelTextRecipe()}>Tags</span>
    </div>
    <select
      required
      value=""
      class={selectRecipe({ size: "sm", variant: "bordered" })}
      name="tagIds"
      disabled={unassignedTags.length < 1}
    >
      <option value="" disabled>Please choose</option>
      {unassignedTags.map((tag) => <option value={tag.id}>{tag.name}</option>)}
    </select>
  </label>
  <button class={buttonRecipe()}>Save</button>
</form>
