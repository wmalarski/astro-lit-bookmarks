---
import { bookmarkContextDefault } from "@modules/bookmarks/BookmarkContext";
import { BookmarkList } from "@modules/bookmarks/BookmarkList";
import AstroBookmarkList from "@modules/bookmarks/BookmarkList.astro";
import { TypedBookmarkProvider } from "@modules/bookmarks/BookmarkProvider";
import Navbar from "@modules/common/Navbar.astro";
import BookmarkFilters from "@modules/filters/BookmarkFilters.astro";
import { tagsContextDefault } from "@modules/tags/TagsContext";
import TagsList from "@modules/tags/TagsList.astro";
import { TypedTagsProvider } from "@modules/tags/TagsProvider";
import { findBookmarks, findBookmarksByMastoIds } from "@server/data/bookmarks";
import { matchBookmarks } from "@server/data/matchBookmarks";
import { findTags } from "@server/data/tags";
import { listMastoBookmarks } from "@server/masto/helpers";
import { paths } from "@utils/paths";
import { z } from "astro/zod";
import Layout from "../layouts/Layout.astro";

if (!Astro.locals.session) {
  return Astro.redirect(paths.login);
}

const showDone = z.coerce.boolean().parse(Astro.url.searchParams.get("done"));

const tags = findTags(Astro);

const { mastoBookmarks, minId, maxId } = await listMastoBookmarks(Astro, {
  maxId: null,
});

const bookmarksForMasto = findBookmarksByMastoIds(Astro, {
  mastoBookmarks,
});

const bookmarksResult = findBookmarks(Astro, {
  endDate: new Date(),
  startDate: null,
});

const matchedBookmarks = matchBookmarks({
  bookmarksForMasto,
  bookmarksResult,
  mastoBookmarks,
  showDone,
});

const tagsMap = new Map(tags.map((tag) => [tag.id, tag]));
---

<Layout title="Welcome to Astro.">
  <TypedTagsProvider
    client:only="lit"
    value={{
      ...tagsContextDefault,
      tags,
      tagsMap,
    }}
  >
    <TypedBookmarkProvider
      client:only="lit"
      value={{
        ...bookmarkContextDefault,
        bookmarks: matchedBookmarks,
        minId,
        maxId,
        showDone,
      }}
    >
      <main class="relative">
        <Navbar />

        <div class="container grid grid-cols-[2fr_1fr] max-w-5xl my-0 mx-auto">
          <BookmarkList client:only="lit" />
          <AstroBookmarkList bookmarks={matchedBookmarks} tagsMap={tagsMap} />
          <aside
            class="block sticky top-0 border-x-[1px] border-x-base-content"
          >
            <BookmarkFilters showDone={showDone} />
            <TagsList tags={tags} />
          </aside>
        </div>
      </main>
    </TypedBookmarkProvider>
  </TypedTagsProvider>
</Layout>
