---
import Layout from "../layouts/Layout.astro";
import "../components/Button/Button";
import "../components/Link/Link";
import { paths } from "@utils/paths";
import { findTags } from "@server/tags";
import { TagsList } from "@modules/tags/TagsList";
import { TypedTagsProvider } from "@modules/tags/TagsProvider";
import { findBookmarks, findBookmarksByMastoIds } from "@server/bookmarks";
import { BookmarkList } from "@modules/bookmarks/BookmarkList";
import { matchBookmarks } from "@server/matchBookmarks";
import { tagsContextDefault } from "@modules/tags/TagsContext";
import { TypedBookmarkProvider } from "@modules/bookmarks/BookmarkProvider";
import { bookmarkContextDefault } from "@modules/bookmarks/BookmarkContext";
import { TypedMastoProvider } from "@modules/masto/MastoProvider";

if (!Astro.locals.session) {
  return Astro.redirect(paths.login);
}

const tags = findTags(Astro);

const mastoBookmarks =
  (await Astro.locals.mastoClient?.v1.bookmarks.list({
    limit: 10,
  })) ?? [];

const bookmarksForMasto = findBookmarksByMastoIds(Astro, {
  mastoBookmarks,
});

const bookmarksResult = findBookmarks(Astro, {
  endDate: new Date(),
  startDate: null,
});

const matchedBookmarks = matchBookmarks({
  bookmarksForMasto,
  bookmarksResult,
  mastoBookmarks,
});
---

<Layout title="Welcome to Astro.">
  <TypedMastoProvider
    client:only="lit"
    url={import.meta.env.MASTODON_URL}
    accessToken={Astro.locals.session.accessToken}
  >
    <TypedTagsProvider
      client:only="lit"
      value={{
        ...tagsContextDefault,
        tags,
        tagsMap: new Map(tags.map((tag) => [tag.id, tag])),
      }}
    >
      <TypedBookmarkProvider
        client:only="lit"
        value={{
          ...bookmarkContextDefault,
          bookmarks: matchedBookmarks,
        }}
      >
        <main>
          <nav class="nav">
            <alb-anchor href={paths.index()}>Home</alb-anchor>
            <alb-anchor href={paths.loginMastodon}>
              Sign in with Mastodon
            </alb-anchor>
            <alb-anchor href={paths.logout}>Sign out</alb-anchor>
          </nav>

          <div class="container">
            <BookmarkList client:only="lit" />
            <aside class="aside">
              <TagsList client:only="lit" />
            </aside>
          </div>
        </main>
      </TypedBookmarkProvider>
    </TypedTagsProvider>
  </TypedMastoProvider>
</Layout>

<style>
  main {
    position: relative;
  }

  .nav {
    display: flex;
    padding: 1.5rem;
    border-bottom: var(--border);
    gap: 1rem;
    position: sticky;
    top: 0px;
    background-color: rgb(var(--background));
    z-index: 1;
  }

  .container {
    display: grid;
    grid-template-columns: 2fr 1fr;
    gap: 1rem;
    max-width: 1024px;
    margin: 0 auto;
  }

  .aside {
    display: block;
    position: sticky;
    top: 0px;
    border-right: var(--border);
  }
</style>
