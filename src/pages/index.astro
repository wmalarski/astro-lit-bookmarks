---
import Layout from "../layouts/Layout.astro";
import { paths } from "@utils/paths";
import { findTags } from "@server/tags";
import { TagsList } from "@modules/tags/TagsList";
import { TypedTagsProvider } from "@modules/tags/TagsProvider";
import { findBookmarks, findBookmarksByMastoIds } from "@server/bookmarks";
import { BookmarkList } from "@modules/bookmarks/BookmarkList";
import { matchBookmarks } from "@server/matchBookmarks";
import { tagsContextDefault } from "@modules/tags/TagsContext";
import { TypedBookmarkProvider } from "@modules/bookmarks/BookmarkProvider";
import { bookmarkContextDefault } from "@modules/bookmarks/BookmarkContext";
import { listMastoBookmarks } from "@server/masto";
import BookmarkFilters from "@modules/bookmarks/BookmarkFilters.astro";
import { z } from "astro/zod";
import { buttonRecipe } from "@components/Button/Button.styles";

if (!Astro.locals.session) {
  return Astro.redirect(paths.login);
}

const showDone = z.coerce.boolean().parse(Astro.url.searchParams.get("done"));

const tags = findTags(Astro);

const { mastoBookmarks, minId, maxId } = await listMastoBookmarks(Astro, {
  maxId: null,
});

const bookmarksForMasto = findBookmarksByMastoIds(Astro, {
  mastoBookmarks,
});

const bookmarksResult = findBookmarks(Astro, {
  endDate: new Date(),
  startDate: null,
});

const matchedBookmarks = matchBookmarks({
  bookmarksForMasto,
  bookmarksResult,
  mastoBookmarks,
  showDone,
});
---

<Layout title="Welcome to Astro.">
  <TypedTagsProvider
    client:only="lit"
    value={{
      ...tagsContextDefault,
      tags,
      tagsMap: new Map(tags.map((tag) => [tag.id, tag])),
    }}
  >
    <TypedBookmarkProvider
      client:only="lit"
      value={{
        ...bookmarkContextDefault,
        bookmarks: matchedBookmarks,
        minId,
        maxId,
        showDone,
      }}
    >
      <main class="relative">
        <nav
          class="navbar gap-4 sticky top-0 bg-base-100 z-10 border-b-[1px] border-b-base-content"
        >
          <div class="navbar-start">
            <a
              class={buttonRecipe({ variant: "ghost", size: "lg" })}
              href={paths.index}
            >
              Home
            </a>
          </div>
          <div class="navbar-end">
            <a
              class={buttonRecipe({ variant: "ghost" })}
              href={paths.loginMastodon}
            >
              Sign in with Mastodon
            </a>
            <a class={buttonRecipe({ variant: "ghost" })} href={paths.logout}>
              Sign out
            </a>
          </div>
        </nav>

        <div class="container grid grid-cols-[2fr_1fr] max-w-5xl my-0 mx-auto">
          <BookmarkList client:only="lit" />
          <aside
            class="block sticky top-0 border-x-[1px] border-x-base-content"
          >
            <BookmarkFilters showDone={showDone} />
            <TagsList client:only="lit" />
          </aside>
        </div>
      </main>
    </TypedBookmarkProvider>
  </TypedTagsProvider>
</Layout>
